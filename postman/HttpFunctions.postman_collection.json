{
	"info": {
		"_postman_id": "85e34a02-80d4-4937-b0b6-370f0db61042",
		"name": "HttpFunctions",
		"description": "Example requests for the `medical-claims` demo app.\n\nShows the usage of all the Function App HttpTrigger endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1525494"
	},
	"item": [
		{
			"name": "Reference Lookups",
			"item": [
				{
					"name": "List Payers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{function-url}}/api/payers?offset=0&limit=50",
							"host": [
								"{{function-url}}"
							],
							"path": [
								"api",
								"payers"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "Number of records to skip when returning partial list (used for paging)"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "Number of recurds to return in this page (50 if not provided)"
								}
							]
						},
						"description": "Retrieve a list of known 'Payers' in the system. In the context of the demo Payers are esentially Insurance companies."
					},
					"response": []
				},
				{
					"name": "List Providers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{function-url}}/api/providers?offset=0&limit=50",
							"host": [
								"{{function-url}}"
							],
							"path": [
								"api",
								"providers"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "Number of records to skip when returning partial list (used for paging)"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "Number of recurds to return in this page (50 if not provided)"
								}
							]
						},
						"description": "StartFragment\n\nRetrieve a list of known 'Providers' in the system. In the context of the demo Providers are esentially medical providers (hospitals, testing facilities, etc.)"
					},
					"response": []
				}
			]
		},
		{
			"name": "List Claims for Member",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{function-url}}/api/member/{{memberId}}/claims?offset=0&limit=50",
					"host": [
						"{{function-url}}"
					],
					"path": [
						"api",
						"member",
						"{{memberId}}",
						"claims"
					],
					"query": [
						{
							"key": "offset",
							"value": "0",
							"description": "Number of records to skip when returning partial list (used for paging)"
						},
						{
							"key": "limit",
							"value": "50",
							"description": "Number of recurds to return in this page (50 if not provided)"
						}
					]
				},
				"description": "Returns a list of claims for a particular member. This result will be paged using a basic offset/limit parameters to indicate how many records to skip, and take."
			},
			"response": []
		},
		{
			"name": "List Claims for Adjudicator",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{function-url}}/api/adjudicator/{{adjudicatorId}}/claims?offset=0&limit=50",
					"host": [
						"{{function-url}}"
					],
					"path": [
						"api",
						"adjudicator",
						"{{adjudicatorId}}",
						"claims"
					],
					"query": [
						{
							"key": "offset",
							"value": "0",
							"description": "Number of records to skip when returning partial list (used for paging)"
						},
						{
							"key": "limit",
							"value": "50",
							"description": "Number of recurds to return in this page (50 if not provided)"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Claim History by Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{function-url}}/api/claim/{{claimId}}/history",
					"host": [
						"{{function-url}}"
					],
					"path": [
						"api",
						"claim",
						"{{claimId}}",
						"history"
					]
				},
				"description": "Returns the full history of a single claim. Response contains `header`, which includes a cut-down summary of the item, and `history`an array containing all ClaimDetail records."
			},
			"response": []
		},
		{
			"name": "Get Single Claim by Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{function-url}}/api/claim/{{claimId}}",
					"host": [
						"{{function-url}}"
					],
					"path": [
						"api",
						"claim",
						"{{claimId}}"
					]
				},
				"description": "Get the more recentl `ClaimDetail` record for a specific claim"
			},
			"response": []
		},
		{
			"name": "Acknowledge Assigned Claim",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{function-url}}/api/claim/{{claimId}}/acknowledge",
					"host": [
						"{{function-url}}"
					],
					"path": [
						"api",
						"claim",
						"{{claimId}}",
						"acknowledge"
					]
				},
				"description": "Acknowledge a claim. This action should be undertaken by an adjudicator before they start reviewing a claim."
			},
			"response": []
		},
		{
			"name": "Update Claim Adjudication by Id",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"claimStatus\": \"Rejected\",\r\n    \"comment\": \"Manual Adjudication\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{function-url}}/api/claim/{{claimId}}",
					"host": [
						"{{function-url}}"
					],
					"path": [
						"api",
						"claim",
						"{{claimId}}"
					]
				},
				"description": "Update a claim as an adjudicator.\n\n- `claimSatus` can be `Proposed` or `Rejected`\n- `lineItems` should be based on result from the GetSingleClaims `lineItems` property (optionally modified). Or undefined/null, in which case the property will be ignored."
			},
			"response": []
		},
		{
			"name": "Get Member by Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{function-url}}/api/member/{{memberId}}",
					"host": [
						"{{function-url}}"
					],
					"path": [
						"api",
						"member",
						"{{memberId}}"
					]
				},
				"description": "Get details about a single member by Id, allowing you to check the running totals for approvals."
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{function-key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "x-functions-key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}